% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui.R
\name{sd_output}
\alias{sd_output}
\title{Output Function for Displaying reactive objects and values}
\usage{
sd_output(
  id,
  type = NULL,
  width = "100\%",
  display = "text",
  inline = TRUE,
  wrapper = NULL,
  ...
)
}
\arguments{
\item{id}{Character string. A unique identifier for the output element.}

\item{type}{Character string. Specifies the type of output. Can be
\code{"question"}, \code{"value"}, or \code{NULL.} If \code{NULL}, the function behaves like
\code{shiny::uiOutput()}.}

\item{width}{Character string. The width of the UI element. Defaults to
\code{"100\%"}.}

\item{display}{Character string. Specifies the display type for \code{"value"}
outputs. Can be \code{"text"}, \code{"verbatim"}, or \code{"ui"}. Only used when
\code{type = "value"}.}

\item{inline}{Logical. Whether to render the output inline. Defaults to
\code{TRUE}.}

\item{wrapper}{Function. A function to wrap the output. Only used when
\code{type = "value"}.}

\item{...}{Additional arguments passed to the underlying 'shiny' functions
or the wrapper function.}
}
\value{
A 'shiny' UI element, the type of which depends on the input
parameters.
}
\description{
Output Function for Displaying reactive objects and values
}
\details{
The function behaves differently based on the \code{type} parameter:
\itemize{
\item If \code{type} is \code{NULL}, it acts like \code{shiny::uiOutput()}.
\item If \code{type} is \code{"question"}, it creates a placeholder for a reactive survey question.
\item If \code{type} is \code{"value"}, it creates an output to display the value of a survey question,
with the display style determined by the \code{display} parameter.
}
}
\examples{
if (interactive()) {
  library(surveydown)

  # Get path to example survey file
  survey_path <- system.file("examples", "sd_output.qmd",
                             package = "surveydown")

  # Copy to a temporary directory
  temp_dir <- tempdir()
  file.copy(survey_path, file.path(temp_dir, "survey.qmd"))
  orig_dir <- getwd()
  setwd(temp_dir)

  # Define a minimal server
  server <- function(input, output, session) {
    sd_server()
  }

  # Run the app
  shiny::shinyApp(ui = sd_ui(), server = server)

  # Clean up
  setwd(orig_dir)
}

}
