% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{sd_completion_code}
\alias{sd_completion_code}
\title{Generate a Random Completion Code}
\usage{
sd_completion_code(digits = 6, id = "completion_code")
}
\arguments{
\item{digits}{An integer specifying the number of digits in the completion
code. Must be a positive integer. Default is 6.}

\item{id}{A character string specifying a unique identifier for this completion
code. If not provided, a default ID will be used. Use different IDs if you
need multiple independent completion codes.}
}
\value{
A character string representing the completion code, consistent
across page refreshes for the same session.
}
\description{
This function generates a random completion code with a specified number of
digits. The code is returned as a character string and persists across page
refreshes within the same user session, similar to sd_sample().
}
\details{
The function works by:
\enumerate{
\item Checking if a completion code already exists in the database for the current session
\item If found, returns the existing code to maintain consistency
\item If not found, generates a new code and stores it
}

This ensures that users will see the same completion code even if they refresh
the page or navigate back to the completion screen.

\strong{Important}: This function must be called within a Shiny reactive context
(i.e., inside a server function) as it needs access to session data and database
connections.
}
\examples{
if (interactive()) {
  # In a surveydown server function:
  server <- function(input, output, session) {
    # Generate a completion code (will be same across refreshes)
    completion_code <- sd_completion_code()
    
    # Generate with custom digits and ID
    special_code <- sd_completion_code(digits = 8, id = "special_completion")
  }
}

}
